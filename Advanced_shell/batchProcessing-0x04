#!/bin/bash

# List of Pokémon to fetch
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
mkdir -p pokemon_data
MAX_RETRIES=3
TIMEOUT=10  # Seconds per request

# Function to fetch one Pokémon with retries and timeout
fetch_pokemon() {
	  local name=$1
	    local attempt=1
	      local success=false

	        while [ $attempt -le $MAX_RETRIES ]; do
			    (
			          curl -s -f "https://pokeapi.co/api/v2/pokemon/$name" -o "pokemon_data/${name}.json"
				      ) &

				          pid=$!
					      SECONDS=0

					          # Monitor the curl process
						      while kill -0 $pid 2>/dev/null; do
							            if [ $SECONDS -ge $TIMEOUT ]; then
									            kill -9 $pid 2>/dev/null
										            echo "[$name] Timed out and killed on attempt $attempt"
											            break
												          fi
													        sleep 1
														    done

														        wait $pid
															    exit_code=$?

															        if [ $exit_code -eq 0 ]; then
																	      echo "[$name] Fetched and saved ✅"
																	            success=true
																		          break
																			      else
																				            echo "[$name] Attempt $attempt failed (exit $exit_code)..."
																					          ((attempt++))
																						        sleep 1
																							    fi
																							      done

																							        if [ "$success" = false ]; then
																									    echo "[$(date)] Failed to fetch $name after $MAX_RETRIES attempts" >> errors.txt
																									        echo "[$name] Failed ❌"
																										  fi
																									  }

																								  # Launch all fetches in parallel
																								  for name in "${POKEMONS[@]}"; do
																									    fetch_pokemon "$name" &
																								    done

																								    # Wait for all background jobs
																								    wait

																								    echo ""
																								    echo "✅ All fetch operations completed."

